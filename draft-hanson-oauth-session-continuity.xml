<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.6.2 (Ruby 2.6.8) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC6749 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.wdenniss-oauth-device-posture SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.wdenniss-oauth-device-posture.xml">
<!ENTITY RFC7662 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7662.xml">
]>


<rfc ipr="trust200902" docName="draft-hanson-oauth-session-continuity-latest" category="std" consensus="true" submissionType="IETF">
  <front>
    <title>OAuth 2.0 Session Continuity</title>

    <author initials="J." surname="Hanson" fullname="Jared Hanson">
      <organization>Okta</organization>
      <address>
        <email>jared.hanson@okta.com</email>
      </address>
    </author>
    <author initials="K." surname="McGuinness" fullname="Karl McGuinness">
      <organization>Okta</organization>
      <address>
        <email>kmcguinness@okta.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="15"/>

    <area>Security</area>
    <workgroup>Web Authorization Protocol</workgroup>
    

    <abstract>


<t>This specification defines a mechanism by which an OAuth 2.0 authorization
server can maintain a logical authorization session in which protected resources
can be accessed over a period time.  This specification also extends existing
OAuth 2.0 endpoints so that dynamic context about the session, such as user
location or device health, can be communicated to the authorization server
throughout the lifetime of the session.  Combined, this functionality provides
a lightweight approach to continuous authorization.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>In OAuth 2.0 <xref target="RFC6749"/>, an authorization server issues an access token and
refresh token to a client.  The client uses the access token to access protected
resources hosted by a resource server, and uses the refresh token to obtain
access tokens from the authorization server.  While the authorization server,
client, and resource server are separate entities, the usage of the access token
and refresh token forms a logical authorization session shared between each
entity.</t>

<t>The access token and refresh token are issued by the authorization server after
authenticating the resource owner and obtaining authorization.  Authorization is
typically obtained by interacting with the resource owner via the authorization
endpoint.  Once authorization has been obtained, issuance of the tokens
initiates an ongoing session in which protected resources may be accessed over
a period of hours or even days.</t>

<t>During this time, the status of the resource owner and her device, such as role,
location, or security posture, may change.  Increasingly, access to protected
resources needs to be based on this dynamically changing context.  However,
typical OAuth deployments evaluate this context infrequently - often only at
session initiation.</t>

<t>This specification provides mechanisms by which an OAuth deployment can both
increase the frequency of access policy evaluation during a session, as well as
increase awareness of dynamically changing context about the session used to
inform policy decisions.</t>

<section anchor="client-profiles"><name>Client Profiles</name>

<t>This specification has been designed around the client profiles defined in
Section 2.1 of <xref target="RFC6749"/>:</t>

<dl newline="true">
  <dt>web application:</dt>
  <dd>
    <t>A web application is a confidential client running on a web server.  Resource
owners access the client via an HTML user interface rendered in a user-agent on
the device used by the resource owner.  The client credentials as well as any
access token issued to the client are stored on the web server and are not
exposed to or accessible by the resource owner.</t>
  </dd>
  <dt>user-agent-based application:</dt>
  <dd>
    <t>A user-agent-based application is a public client in which the client code is
downloaded from a web server and executes within a user-agent (e.g., web
browser) on the device used by the resource owner.  Protocol data and
credentials are easily accessible (and often visible) to the resource owner.
Since such applications reside within the user-agent, they can make seamless use
of the user-agent capabilities when requesting authorization.</t>
  </dd>
  <dt>native application:</dt>
  <dd>
    <t>A native application is a public client installed and executed on the device
used by the resource owner.  Protocol data and credentials are accessible to the
resource owner.  It is assumed that any client authentication credentials
included in the application can be extracted.  On the other hand, dynamically
issued credentials such as access tokens or refresh tokens can receive an
acceptable level of protection.  At a minimum, these credentials are protected
from hostile servers with which the application may interact.  On some
platforms, these credentials might be protected from other applications residing
on the same device.</t>
  </dd>
</dl>

</section>
<section anchor="token-locality"><name>Token Locality</name>

<t>After obtaining approval of the end-user via interaction within the end-user's
user-agent, OAuth issues delegation-specific access tokens and refresh tokens to
clients.  This specification defines two token localities, based on where tokens
reside relative to the user-agent in which the issuance was approved:</t>

<dl newline="true">
  <dt>off device:</dt>
  <dd>
    <t>A token is off device when it resides with an application that is not located
on the same device as the end-user's user-agent.  Tokens issued to a web
application are off device, as the application runs on a web server acceessed
remotely via the user-agent.</t>
  </dd>
  <dt>on device:</dt>
  <dd>
    <t>A token is on device when it resides with an application that is located on
the same device as the end-user's user-agent.  Tokens issued to native
native applications and user-agent-based applications are on device, as the
application is executing either on the device or within the user-agent itself.</t>
  </dd>
</dl>

</section>
<section anchor="notational-conventions"><name>Notational Conventions</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="signal-sharing"><name>Signal Sharing</name>

<section anchor="refreshing-an-access-token"><name>Refreshing an Access Token</name>

<section anchor="from-on-device"><name>From On Device</name>

<t>A native application possessing a refresh token that is on device shares signals
by making a refresh request that includes device posture, as defined in section
6 of <xref target="I-D.wdenniss-oauth-device-posture"/>.</t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded

  grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
  client_id=s6BhdRkqt3&device_posture=%7B%22screen_lock%22%3Atrue%2C
  %22device_os%22%3A%22iOS%22%2C%22device_os_version%22%3A%2211.1%22
  %7D
]]></artwork></figure>

</section>
<section anchor="from-off-device"><name>From Off Device</name>

<t>A web application posessing a refresh token that is off device shares signals by
making a refresh request that includes user-agent posture, as defined by User
Agent Posture Signals.</t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
  Content-Type: application/x-www-form-urlencoded

  grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
  client_id=s6BhdRkqt3&user_agent_posture=%7B%22user_agent%22%3A%22Mozilla%2F5.0
  %20%28Macintosh%3B%20Intel%20Mac%20OS%20X%2010_14_5%29%20AppleWebKit%2F537.36
  %20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F75.0.3770.142%20Safari%2F537.36%22
  %2C%22ip_address%22%3A%2293.184.216.34%22%7D
]]></artwork></figure>

<t>The client MUST only include user-agent posture in online access scenarios.
Refresh tokens used in offline scenarios, when the end-user is not present, are
decoupled from the session and lack end-user user agent context.</t>

</section>
</section>
<section anchor="token-introspection"><name>Token Introspection</name>

<section anchor="introspection-request"><name>Introspection Request</name>

<t>A resource server querying for to determine the state of an access token shares
signals by making an by making an introspection request to the introspection
endpoint, as defined in Section 2.1 of <xref target="RFC7662"/>.</t>

<t>In addition to the parameters defined by Section 2.1 of <xref target="RFC7662"/>, the
following parameters are also defined:</t>

<dl>
  <dt>user_agent_posture</dt>
  <dd>
    <t>OPTIONAL. URL-encoded JSON dictionary, containing user-agent posture signals,
as defined by User Agent Posture Signals.</t>
  </dd>
</dl>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /introspect HTTP/1.1
  Host: server.example.com
  Accept: application/json
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW

  token=mF_9.B5f-4.1JqM&token_type_hint=access_token
  &user_agent_posture=%7B%22user_agent%22%3A%22Mozilla%2F5.0
  %20%28Macintosh%3B%20Intel%20Mac%20OS%20X%2010_14_5%29%20AppleWebKit%2F537.36
  %20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F75.0.3770.142%20Safari%2F537.36%22
  %2C%22ip_address%22%3A%2293.184.216.34%22%7D
]]></artwork></figure>

<t>Note that the locality of an access token is always off device when presented to
a resource server.</t>

</section>
</section>
</section>
<section anchor="comparison-to-caep"><name>Comparison to CAEP</name>

<t>Use of existing endpoints is
intended to provide a lightweight approach to continuous authorization, while
complimenting future protocols that provide real-time access evaluation using a
publish-subscribe approach.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC6749;
&RFC2119;
&RFC8174;
&I-D.wdenniss-oauth-device-posture;
&RFC7662;


    </references>




  </back>

<!-- ##markdown-source:
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
88iUE9+O1dz02T8BBF3uizAiAAA=

-->

</rfc>

